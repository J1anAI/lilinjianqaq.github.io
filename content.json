{"meta":{"title":"Hexo","subtitle":"","description":"","author":"Jian","url":"http://yoursite.com","root":"/"},"pages":[{"title":"文章分类","date":"2020-06-19T07:22:59.000Z","updated":"2020-06-19T07:54:26.688Z","comments":false,"path":"categories/index.html","permalink":"http://yoursite.com/categories/index.html","excerpt":"","text":""}],"posts":[{"title":"SpringBootz整合Thymeleaf","slug":"SpringBoot整合Thymeleaf","date":"2020-07-08T12:26:03.000Z","updated":"2020-07-08T12:53:24.501Z","comments":true,"path":"2020/07/08/SpringBoot整合Thymeleaf/","link":"","permalink":"http://yoursite.com/2020/07/08/SpringBoot%E6%95%B4%E5%90%88Thymeleaf/","excerpt":"","text":"1、Thymeleaf 介绍Thymeleaf的主要目标是将优雅的自然模板带到开发工作流程中，并将HTML在浏览器 中正确显示，并且可以作为静态原型，让开发团队能更容易地协作。Thymeleaf 能够处理 HTML，XML，JavaScript，CSS甚至纯文本。 长期以来,jsp 在视图领域有非常重要的地位,随着时间的变迁,出现了一位新的挑战者:Thymeleaf,Thymeleaf 是原生的,不依赖于标签库.它能够在接受原始HTML的地方进行编 辑和渲染.因为它没有与Servelet规范耦合,因此Thymeleaf模板能进入jsp所无法涉足的领域。 2、Thymeleaf 基本使用修改POM文件，添加Thymeleaf启动器依赖 1234&lt;dependency&gt; &lt;groupId&gt;org.springframework.boot&lt;&#x2F;groupId&gt; &lt;artifactId&gt;spring-boot-starter-thymeleaf&lt;&#x2F;artifactId&gt;&lt;&#x2F;dependency&gt; 3、Thymeleaf语法使用再html标签中添加命名空间：xmlns:th=”http://www.thymeleaf.org&quot; 3.1、字符串与变量输出操作 操作 作用 th:text 在页面中输出值 th:value 可以将一个值放入到 input 标签的 value 中 3.2、字符串操作Thymeleaf 提供了一些内置对象，内置对象可直接在模板中使用。这些对象是以#引用的。1）引用内置对象需要使用#2）大部分内置对象的名称都以 s 结尾。如：strings、numbers、dates 3.3、日期格式化处理dates.format(key) 3.4、条件判断、迭代遍历 操作 作用 th:if 条件判断 th:switch/th:case th:switch / th:case 与 Java 中的 switch 语句等效，有条件地显示匹配的内容。如果有 多个匹配结果只选择第一个显示。 th:case=”*”表示 Java 中 switch 的 default，即没有 case 的值为 true 时则显示 th:case=”*” 的内容 th:each 迭代器，用于循环迭代集合","categories":[{"name":"SpringBoot","slug":"SpringBoot","permalink":"http://yoursite.com/categories/SpringBoot/"},{"name":"Thymeleaf","slug":"SpringBoot/Thymeleaf","permalink":"http://yoursite.com/categories/SpringBoot/Thymeleaf/"}],"tags":[]},{"title":"SpringBoot整合Freemarker","slug":"SpringBootz整合Freemarker","date":"2020-07-08T12:06:18.000Z","updated":"2020-07-08T12:23:43.260Z","comments":true,"path":"2020/07/08/SpringBootz整合Freemarker/","link":"","permalink":"http://yoursite.com/2020/07/08/SpringBootz%E6%95%B4%E5%90%88Freemarker/","excerpt":"","text":"1、Jsp和Freemarker的区别1.1、jspJsp在做视图渲染的过程中完全是靠服务端Tomcat来完成的。Tomcat先把Jsp编译成Servlet，然后执行Servlet，Servlet中的打印语句再把结果输出给页面，然后再客户端的浏览器就可以看到数据了。 1.2、FreemarkerFreemarker(以及Thymeleaf)模板视图渲染过程和Jsp是完全不一样的。它是依赖客户端来渲染的。Freemarker的视图会返回给客户端，渲染的数据也会 返回给客户端，再客户端浏览器中完成数据和页面的渲染过程。效率相比再服务端数据渲染的Jsp效率会高一些。 2、SpringBoot整合Freemarker1、创建项目2、修改POM文件添加Freemarker启动器 1234 &lt;dependency&gt; &lt;groupId&gt;org.springframework.boot&lt;&#x2F;groupId&gt; &lt;artifactId&gt;spring-boot-starter-freemarker&lt;&#x2F;artifactId&gt;&lt;&#x2F;dependency&gt; 3、创建实体类4、创建Contrller5、创建视图(先创建html文件，最后把后缀改为.ftl)6、修改配置文件添加后缀 1# spring.freemarker.suffix&#x3D;.ftl","categories":[{"name":"SpringBoot","slug":"SpringBoot","permalink":"http://yoursite.com/categories/SpringBoot/"},{"name":"Freemarker","slug":"SpringBoot/Freemarker","permalink":"http://yoursite.com/categories/SpringBoot/Freemarker/"}],"tags":[]},{"title":"springbootf中关于静态资源的访问","slug":"springbootf中关于静态资源的访问","date":"2020-07-08T11:44:51.000Z","updated":"2020-07-08T12:07:03.087Z","comments":true,"path":"2020/07/08/springbootf中关于静态资源的访问/","link":"","permalink":"http://yoursite.com/2020/07/08/springbootf%E4%B8%AD%E5%85%B3%E4%BA%8E%E9%9D%99%E6%80%81%E8%B5%84%E6%BA%90%E7%9A%84%E8%AE%BF%E9%97%AE/","excerpt":"","text":"SpringBoot中没有WebApp目录，只有src目录。在src/main/resources下面的static目录存放静态页面，而templates中存放动态页面。 1、static目录SpringBoot通过 classpath/static 目录访问静态资源。注意存放静态资源的目录名称必须是 static。 2、templates目录在 SpringBoot中不推荐使用jsp作为视图层技术，而是默认使用Thymeleaf来做动态页面。Templates 目录这是存放Thymeleaf的页面。 3、静态资源存放其他位置3.1、SpringBoot访问静态资源的位置(从上往下一次访问)classpath:/META‐INF/resources/classpath:/resources/classpath:/static/classpath:/public/ 3.2、自定义静态资源位置配置静态资源访问路径(配置了这个则只会从配置的路径里查找，3.1中的就会失效) 1# spring.resources.static-locations&#x3D;classpath:&#x2F;suibian&#x2F;,classpath:&#x2F;static&#x2F;","categories":[{"name":"SpringBoot","slug":"SpringBoot","permalink":"http://yoursite.com/categories/SpringBoot/"},{"name":"静态资源","slug":"SpringBoot/静态资源","permalink":"http://yoursite.com/categories/SpringBoot/%E9%9D%99%E6%80%81%E8%B5%84%E6%BA%90/"}],"tags":[]},{"title":"centos8中分配静态ip","slug":"centos8中分配静态ip","date":"2020-05-07T11:50:46.000Z","updated":"2020-06-19T07:41:19.199Z","comments":true,"path":"2020/05/07/centos8中分配静态ip/","link":"","permalink":"http://yoursite.com/2020/05/07/centos8%E4%B8%AD%E5%88%86%E9%85%8D%E9%9D%99%E6%80%81ip/","excerpt":"","text":"1、将动态ip修改为静态ip①首先进入目录/etc/sysconfig/network-scripts/ 1# cd &#x2F;etc&#x2F;sysconfig&#x2F;network-scripts&#x2F; ②然后修改文件ifcfg-ens33 1# vim ifcfg-ens33 把static赋值给BOOTPRPTO在文件末尾加上IPADDR=192.168.3.18 (ip地址)PREFIX=24 （子网掩码）GATWAY=192.168.3.2 (网关)DNS1=114.114.114.114 (域名解析) 2、绑定多ip①首先进入目录/etc/sysconfig/network-scripts/ 1# cd &#x2F;etc&#x2F;sysconfig&#x2F;network-scripts&#x2F; ②复制文件ifcfg-ens33命名为ifcfg-ens33：1 1# cp ifcfg-ens33 ifcfg-ens33:1 ③修改文件ifcfg-ens33：1把ens33:1赋值给DEVICE修改IPADDR(eg:IPADDR=192.168.3.188) 注意最后重启系统","categories":[{"name":"linux","slug":"linux","permalink":"http://yoursite.com/categories/linux/"},{"name":"centos8","slug":"linux/centos8","permalink":"http://yoursite.com/categories/linux/centos8/"}],"tags":[{"name":"centos8","slug":"centos8","permalink":"http://yoursite.com/tags/centos8/"},{"name":"linux","slug":"linux","permalink":"http://yoursite.com/tags/linux/"}]},{"title":"nginx命令","slug":"nginx命令","date":"2020-05-07T10:57:03.000Z","updated":"2020-06-19T07:46:44.553Z","comments":true,"path":"2020/05/07/nginx命令/","link":"","permalink":"http://yoursite.com/2020/05/07/nginx%E5%91%BD%E4%BB%A4/","excerpt":"","text":"1、启动nginx1# systemctl start nginx 2、查看nginx运行状态1# systemctl status nginx","categories":[{"name":"linux","slug":"linux","permalink":"http://yoursite.com/categories/linux/"},{"name":"nginx","slug":"linux/nginx","permalink":"http://yoursite.com/categories/linux/nginx/"}],"tags":[]},{"title":"hexo图片的插入","slug":"hexo图片的插入","date":"2020-05-06T10:13:51.000Z","updated":"2020-06-19T07:46:56.694Z","comments":true,"path":"2020/05/06/hexo图片的插入/","link":"","permalink":"http://yoursite.com/2020/05/06/hexo%E5%9B%BE%E7%89%87%E7%9A%84%E6%8F%92%E5%85%A5/","excerpt":"","text":"图片的显示绝对路径图片 相对路径(展开全文才能看到图片)图片 相对路径1、安装插件1npm install hexo-asset-image --save 2、修改插件内容打开/node_modules/hexo-asset-image/index.js，将内容更换为下面的代码 12345678910111213141516171819202122232425262728293031323334353637383940414243444546474849505152535455565758596061'use strict';var cheerio = require('cheerio');// http://stackoverflow.com/questions/14480345/how-to-get-the-nth-occurrence-in-a-stringfunction getPosition(str, m, i) &#123; return str.split(m, i).join(m).length;&#125;var version = String(hexo.version).split('.');hexo.extend.filter.register('after_post_render', function(data)&#123; var config = hexo.config; if(config.post_asset_folder)&#123; var link = data.permalink; if(version.length &gt; 0 &amp;&amp; Number(version[0]) == 3) var beginPos = getPosition(link, '/', 1) + 1; else var beginPos = getPosition(link, '/', 3) + 1; // In hexo 3.1.1, the permalink of \"about\" page is like \".../about/index.html\". var endPos = link.lastIndexOf('/') + 1; link = link.substring(beginPos, endPos); var toprocess = ['excerpt', 'more', 'content']; for(var i = 0; i &lt; toprocess.length; i++)&#123; var key = toprocess[i]; var $ = cheerio.load(data[key], &#123; ignoreWhitespace: false, xmlMode: false, lowerCaseTags: false, decodeEntities: false &#125;); $('img').each(function()&#123; if ($(this).attr('src'))&#123; // For windows style path, we replace '\\' to '/'. var src = $(this).attr('src').replace('\\\\', '/'); if(!/http[s]*.*|\\/\\/.*/.test(src) &amp;&amp; !/^\\s*\\//.test(src)) &#123; // For \"about\" page, the first part of \"src\" can't be removed. // In addition, to support multi-level local directory. var linkArray = link.split('/').filter(function(elem)&#123; return elem != ''; &#125;); var srcArray = src.split('/').filter(function(elem)&#123; return elem != '' &amp;&amp; elem != '.'; &#125;); if(srcArray.length &gt; 1) srcArray.shift(); src = srcArray.join('/'); $(this).attr('src', config.root + link + src); console.info&amp;&amp;console.info(\"update link as:--&gt;\"+config.root + link + src); &#125; &#125;else&#123; console.info&amp;&amp;console.info(\"no src attr, skipped...\"); console.info&amp;&amp;console.info($(this)); &#125; &#125;); data[key] = $.html(); &#125; &#125;&#125;); 3、打开_config.yml文件，修改下述内容1post_asset_folder: true 4、创建md文件1hexo n &quot;文件名&quot; 此时会自动在source_posts中创建名字为”文件名”的文件然后手动把图片放进去 5、插入图片1&#123;% asset_img 图片名.后缀 图片描述 %&#125; 参考文献https://blog.csdn.net/wqssh21/article/details/105019227","categories":[{"name":"hexo","slug":"hexo","permalink":"http://yoursite.com/categories/hexo/"}],"tags":[]},{"title":"hexo写博客步骤","slug":"hexo写博客教程","date":"2020-05-06T09:21:32.000Z","updated":"2020-06-19T07:45:14.174Z","comments":true,"path":"2020/05/06/hexo写博客教程/","link":"","permalink":"http://yoursite.com/2020/05/06/hexo%E5%86%99%E5%8D%9A%E5%AE%A2%E6%95%99%E7%A8%8B/","excerpt":"","text":"第一步hexo n “博客名称” 第二步打开生成的md文件 第三步写博文 第四步先清理 hexo clean再生成 hexo g启动看一下预览(localhost:4000) hexo s部署到github hexo d","categories":[{"name":"hexo","slug":"hexo","permalink":"http://yoursite.com/categories/hexo/"}],"tags":[]},{"title":"Hexo Admin管理","slug":"Hexo-Admin管理-1","date":"2020-05-06T08:54:00.000Z","updated":"2020-06-19T07:47:13.989Z","comments":true,"path":"2020/05/06/Hexo-Admin管理-1/","link":"","permalink":"http://yoursite.com/2020/05/06/Hexo-Admin%E7%AE%A1%E7%90%86-1/","excerpt":"","text":"1、安装插件npm install –save hexo-admin 2、启动服务器hexo server -d 3、编写博文在localhost:4000/admin/中编写博文","categories":[{"name":"linux","slug":"linux","permalink":"http://yoursite.com/categories/linux/"},{"name":"centos8","slug":"linux/centos8","permalink":"http://yoursite.com/categories/linux/centos8/"}],"tags":[],"author":"Jian"},{"title":"我的第一篇博客文章","slug":"我的第一篇博客文章","date":"2020-05-06T02:05:49.000Z","updated":"2020-06-05T09:51:25.103Z","comments":true,"path":"2020/05/06/我的第一篇博客文章/","link":"","permalink":"http://yoursite.com/2020/05/06/%E6%88%91%E7%9A%84%E7%AC%AC%E4%B8%80%E7%AF%87%E5%8D%9A%E5%AE%A2%E6%96%87%E7%AB%A0/","excerpt":"","text":"第一章内容 第二章内容 参考文献www.lilinjian.cn","categories":[],"tags":[]},{"title":"Hello World","slug":"hello-world","date":"2020-05-06T01:55:23.404Z","updated":"2020-06-05T09:51:17.140Z","comments":true,"path":"2020/05/06/hello-world/","link":"","permalink":"http://yoursite.com/2020/05/06/hello-world/","excerpt":"","text":"Welcome to Hexo! This is your very first post. Check documentation for more info. If you get any problems when using Hexo, you can find the answer in troubleshooting or you can ask me on GitHub. Quick StartCreate a new post1$ hexo new \"My New Post\" More info: Writing Run server1$ hexo server More info: Server Generate static files1$ hexo generate More info: Generating Deploy to remote sites1$ hexo deploy More info: Deployment","categories":[],"tags":[]}],"categories":[{"name":"SpringBoot","slug":"SpringBoot","permalink":"http://yoursite.com/categories/SpringBoot/"},{"name":"Thymeleaf","slug":"SpringBoot/Thymeleaf","permalink":"http://yoursite.com/categories/SpringBoot/Thymeleaf/"},{"name":"Freemarker","slug":"SpringBoot/Freemarker","permalink":"http://yoursite.com/categories/SpringBoot/Freemarker/"},{"name":"静态资源","slug":"SpringBoot/静态资源","permalink":"http://yoursite.com/categories/SpringBoot/%E9%9D%99%E6%80%81%E8%B5%84%E6%BA%90/"},{"name":"linux","slug":"linux","permalink":"http://yoursite.com/categories/linux/"},{"name":"centos8","slug":"linux/centos8","permalink":"http://yoursite.com/categories/linux/centos8/"},{"name":"nginx","slug":"linux/nginx","permalink":"http://yoursite.com/categories/linux/nginx/"},{"name":"hexo","slug":"hexo","permalink":"http://yoursite.com/categories/hexo/"}],"tags":[{"name":"centos8","slug":"centos8","permalink":"http://yoursite.com/tags/centos8/"},{"name":"linux","slug":"linux","permalink":"http://yoursite.com/tags/linux/"}]}